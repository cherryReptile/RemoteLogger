version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./docker/nginx/templates:/etc/nginx/templates
    ports:
      - "80:80"
    command: [nginx-debug, '-g', 'daemon off;']
  app:
    build:
        context: .
        dockerfile: Dockerfile
    user: "{{USER}}:{{GROUP}}"
    environment:
            GOCACHE: /usr/src/app/tmp/cache
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_PASSWORD}
            GIN_MODE: release
            GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
            GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
            GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
            GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
            TG_BOT_TOKEN: ${TG_BOT_TOKEN}
            DOMAIN: ${DOMAIN}
            JWT_KEY: ${JWT_KEY}
    ports:
      - "2345:2345"
    volumes:
      - ./:/usr/src/app
      - /etc/passwd:/etc/passwd
      - /etc/shadow:/etc/shadow
      - ~/go/pkg:/go/pkg # для синхронизиации пакетов с IDE
  db:
      image: postgres:alpine
      restart: unless-stopped
      command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      volumes:
        - ./docker/pg/data:/var/lib/postgresql/data
      ports:
        - ${DB_PORT:-5432}:5432